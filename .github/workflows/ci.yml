name: CI Pipeline

on:
  push:
    branches: ["**"] # Run on all branches

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "yarn"

      - name: Cache Node.js modules
        id: cache-step
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/sdk/node_modules
            packages/ui-components/node_modules
            packages/icons/node_modules
            packages/project-metrics/node_modules
            apps/website/node_modules
          key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        if: ${{ steps.cache-step.outputs.cache-hit != 'true' }}
        run: yarn install --frozen-lockfile

      - name: Build packages
        run: yarn build-libs

      - name: Build website
        run: yarn build
        working-directory: apps/website

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          if-no-files-found: error
          nclude-hidden-files: true
          path: |
            packages/sdk/lib/
            packages/ui-components/dist/
            packages/icons/dist/
            packages/project-metrics/lib/
            apps/website/.next/

  # lint:
  #   name: Lint
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Use Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "18"
  #         cache: "yarn"

  #     - name: Cache Node.js modules
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           node_modules
  #           packages/sdk/node_modules
  #           packages/ui-components/node_modules
  #           packages/icons/node_modules
  #           packages/project-metrics/node_modules
  #           apps/website/node_modules
  #         key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         fail-on-cache-miss: true

  #     - name: Download compiled artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build-artifacts

  #     - name: Lint
  #       run: yarn lint

  audit:
    name: Audit
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: browser-actions/setup-chrome@v1
        id: setup-chrome

      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "yarn"

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/sdk/node_modules
            packages/ui-components/node_modules
            packages/icons/node_modules
            packages/project-metrics/node_modules
            apps/website/node_modules
          key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}
          fail-on-cache-miss: true

      - name: Download compiled artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get -y install google-chrome-stable

      - name: Start website
        run: |
          yarn start &
          sleep 5
        working-directory: apps/website

      - name: Lighthouse Reports
        run: |
          cd apps/website
          ls -la
          yarn run lhci:mobile
          yarn run lhci:desktop

      - name: Generate PDF Reports
        run: yarn reports
        env:
          CHROME_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}

      - name: Archive reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          if-no-files-found: warn
          path: |
            reports/
